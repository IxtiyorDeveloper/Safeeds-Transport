{"version":3,"file":"static/js/640.0b1a7aeb.chunk.js","mappings":"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","sources":["pages/satisfied-customers/create-satisfied-customer/create-satisfied-customer.js","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport {Button, Col, Form, Input, Row} from \"antd\";\r\nimport ImageUpload from \"../../../components/image-upload/image-upload\";\r\nimport {MainApi} from \"../../../api\";\r\nimport {Editor} from \"react-draft-wysiwyg\";\r\nimport {useCreateSatisfied} from \"hooks\";\r\nimport {toast} from \"react-toastify\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport {ContentState, convertToRaw, EditorState} from \"draft-js\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction CreateSatisfiedCustomer(props) {\r\n    const navigate = useNavigate()\r\n\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n    const createMutation = useCreateSatisfied({\r\n        onSuccess() {\r\n            toast.success(\"Successfully created\")\r\n            navigate(-1)\r\n        },\r\n        onError(err) {\r\n            toast.error(err?.data?.error)\r\n        },\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        createMutation.mutate({\r\n            commment: draftToHtml(convertToRaw(editorState.getCurrentContent())).toString(),\r\n            name: values?.name,\r\n            star: Number(values?.star),\r\n            icon: url\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const blocks = htmlToDraft(\"\");\r\n\r\n    const {contentBlocks, entityMap} = blocks;\r\n    const contentState = ContentState.createFromBlockArray(\r\n        contentBlocks,\r\n        entityMap\r\n    );\r\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(contentState));\r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n                layout=\"vertical\"\r\n            >\r\n                <Row gutter={[20, 20]} className=\"alce\">\r\n                    <Col span={4}>\r\n                        <ImageUpload\r\n                            onSetImage={image => setUrl(image)}\r\n                            url={`${MainApi}/${url}`}\r\n                            forEdit={true}\r\n                            isCreate={true}\r\n                            imgLoading={!url}\r\n                        />\r\n                    </Col>\r\n                    <Col span={9}>\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your name!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={9}>\r\n                        <div>\r\n                            <Form.Item\r\n                                label=\"Star\"\r\n                                name=\"star\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your star!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input type=\"number\"/>\r\n                            </Form.Item>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Form.Item\r\n                        label=\"Comment\"\r\n                        name=\"commment\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your commment!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Editor\r\n                            editorState={editorState}\r\n                            toolbarClassName=\"toolbarClassName\"\r\n                            wrapperClassName=\"wrapperClassName\"\r\n                            editorClassName=\"editorClassName\"\r\n                            onEditorStateChange={onEditorStateChange}\r\n                            toolbar={{\r\n                                options: [\r\n                                    \"inline\",\r\n                                    \"blockType\",\r\n                                    \"fontSize\",\r\n                                    \"fontFamily\",\r\n                                    \"list\",\r\n                                    \"textAlign\",\r\n                                    \"colorPicker\",\r\n                                    \"link\",\r\n                                    \"embedded\",\r\n                                    \"emoji\",\r\n                                    \"image\",\r\n                                    \"remove\",\r\n                                    \"history\",\r\n                                ],\r\n                                colorPicker: {\r\n                                    popupClassName: \"colorModal\",\r\n                                },\r\n                                link: {\r\n                                    popupClassName: \"colorModal\",\r\n                                },\r\n                                image: {\r\n                                    popupClassName: \"colorModal\",\r\n                                },\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Row>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={createMutation?.isLoading}>\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(CreateSatisfiedCustomer);\r\n","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\n\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);"],"names":["CreateSatisfiedCustomer","props","navigate","useNavigate","useState","url","setUrl","createMutation","useCreateSatisfied","onSuccess","toast","onError","err","data","error","blocks","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","EditorState","editorState","setEditorState","name","initialValues","remember","onFinish","values","mutate","commment","draftToHtml","convertToRaw","getCurrentContent","toString","star","Number","icon","onFinishFailed","errorInfo","console","log","autoComplete","layout","gutter","className","span","onSetImage","image","MainApi","forEdit","isCreate","imgLoading","label","rules","required","message","type","Editor","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","toolbar","options","colorPicker","popupClassName","link","htmlType","loading","isLoading","React","PlusOutlined","ref","AntdIcon","_objectSpread","PlusOutlinedSvg","displayName"],"sourceRoot":""}