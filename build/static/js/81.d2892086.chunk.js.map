{"version":3,"file":"static/js/81.d2892086.chunk.js","mappings":"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","sources":["api/index.js","components/image-upload/image-upload.e.js","components/image-upload/image-upload.js","hooks/useArticles.js","hooks/useSatisfied.js","hooks/useEmail.js","hooks/useAuth.js","pages/articles/create-article/create-article.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {getCookie} from \"utils/cookie\";\r\n\r\nexport const MainApi = \"https://safeeds.us/api\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: MainApi,\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    async (config) => {\r\n        config.headers.Authorization = `Bearer ${getCookie()}`;\r\n        config.headers = {\r\n            ...config.headers,\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error.response)\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        return Promise.reject(error.response);\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n  .avatar-uploader > .ant-upload {\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n  }\r\n`\r\nexport const ImageWrapper = styled.div`\r\n  background-color: ${props =>\r\n    props.forEdit ? \"rgba(0,0,0,0.9)\" : \"transparent\"};\r\n  z-index: 100;\r\n`\r\n\r\nexport const WrapperDefault = styled.div`\r\n  background-color: white;\r\n`\r\nexport const StyledImg = styled.img`\r\n  width: 50%;\r\n  z-index: 10;\r\n  height: 100%;\r\n  object-position: center !important;\r\n  object-fit: cover !important;\r\n`\r\n","import {useEffect, useState} from \"react\"\r\nimport {message, Upload} from \"antd\"\r\nimport {LoadingOutlined, PlusOutlined} from \"@ant-design/icons\"\r\n\r\nimport {ImageWrapper, StyledImg, Wrapper, WrapperDefault,} from \"./image-upload.e\"\r\nimport {useUploadFile} from \"hooks\";\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader()\r\n    reader.addEventListener(\"load\", () => callback(reader.result))\r\n    reader.readAsDataURL(img)\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\"\r\n    if (!isJpgOrPng) message.error(\"You can only upload images file!\")\r\n    return isJpgOrPng\r\n}\r\n\r\nconst ImageUpload = ({\r\n                         onSetImage,\r\n                         url,\r\n                         forEdit,\r\n                         imgLoading,\r\n                         isCreate = false,\r\n                         ...args\r\n                     }) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [imageUrl, setImageUrl] = useState(url)\r\n\r\n    const uploadFile = useUploadFile({\r\n        onSuccess: () => {\r\n            console.log(\"success\")\r\n        },\r\n        onError: (err) => {\r\n            console.log(\"err\", err)\r\n        },\r\n    })\r\n\r\n    const uploadButton = (\r\n        <WrapperDefault>\r\n            {\r\n                (\r\n                    isCreate ?\r\n                        ((!isCreate || uploadFile?.isLoading) && imgLoading)\r\n                        :\r\n                        (uploadFile?.isLoading || imgLoading)\r\n                )\r\n                    ?\r\n                    <LoadingOutlined/>\r\n                    :\r\n                    <PlusOutlined/>\r\n            }\r\n            <div style={{marginTop: 8}}>Upload</div>\r\n        </WrapperDefault>\r\n    )\r\n\r\n    const handleChange = (info) => {\r\n        const formData = new FormData()\r\n        if (info.file.status === \"uploading\") {\r\n            return\r\n        }\r\n        if (info.file.status === \"done\") {\r\n            getBase64(info.file.originFileObj, (imageUrl) => {\r\n\r\n                setImageUrl(imageUrl)\r\n                setLoading(true)\r\n            })\r\n            formData.append(\"file\", info.file.originFileObj)\r\n            uploadFile.mutate(formData)\r\n        }\r\n    }\r\n\r\n    const dummyRequest = ({file, onSuccess}) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\")\r\n        }, 0)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!!uploadFile?.data) {\r\n            onSetImage(uploadFile?.data?.data?.result?.url)\r\n        }\r\n    }, [uploadFile])\r\n\r\n    return (\r\n        <Wrapper {...args}>\r\n            <Upload\r\n                name=\"avatar\"\r\n                listType=\"picture-card\"\r\n                className=\"avatar-uploader\"\r\n                showUploadList={false}\r\n                beforeUpload={beforeUpload}\r\n                onChange={handleChange}\r\n                customRequest={dummyRequest}\r\n                disabled={!forEdit}\r\n                accept=\"image/*\"\r\n            >\r\n                <ImageWrapper forEdit={forEdit}>\r\n                    {((imageUrl || url) && !imgLoading && !uploadFile?.isLoading) ? (\r\n                        <StyledImg src={loading ? imageUrl : url} alt=\"avatar\" height=\"100px\"/>\r\n                    ) : (\r\n                        uploadButton\r\n                    )}\r\n                </ImageWrapper>\r\n            </Upload>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import {useMutation, useQuery} from \"react-query\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport api from \"../api\"\r\n\r\nconst getArticles = async () => {\r\n    try {\r\n        return await api.get(\"/article\")\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nexport const getArticle = async (id) => {\r\n    try {\r\n        return await api.get(`/article/${id}`)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst updateArticle = async (id, data) => {\r\n    try {\r\n        await api.put(`/article/${id}`, data)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst deleteArticle = async (id) => {\r\n    try {\r\n        await api.delete(`/article/${id}`)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst createArticle = async (data) => {\r\n    try {\r\n        await api.post(`/article`, data)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst uploadFile = async (data) => {\r\n    try {\r\n        return await api.post(`/image-upload`, data)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nexport const useArticles = () => {\r\n    return useQuery([\"rates\"], () => getArticles())\r\n}\r\n\r\nexport const useArticle = () => {\r\n    const {id} = useParams()\r\n    return useQuery([\"rate\", id], () => getArticle(id), {\r\n        enabled: !!id,\r\n    })\r\n}\r\n\r\nexport const useUpdateArticle = ({onSuccess, onError}) => {\r\n    const {id} = useParams()\r\n    return useMutation(data => updateArticle(id, data), {onSuccess, onError})\r\n}\r\n\r\nexport const useDeleteArticle = ({onSuccess, onError}) => {\r\n    const {id} = useParams()\r\n    return useMutation(() => deleteArticle(id), {\r\n        onSuccess,\r\n        onError,\r\n    })\r\n}\r\n\r\nexport const useCreateArticle = ({onSuccess, onError}) => {\r\n    return useMutation(\r\n        data => createArticle(data),\r\n        {\r\n            onSuccess,\r\n            onError,\r\n        }\r\n    )\r\n}\r\n\r\nexport const useUploadFile = ({onSuccess, onError}) => {\r\n    return useMutation(\r\n        data => uploadFile(data),\r\n        {\r\n            onSuccess,\r\n            onError,\r\n        }\r\n    )\r\n}\r\n","import {useMutation, useQuery} from \"react-query\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport api from \"../api\"\r\n\r\nconst getSatisfieds = async () => {\r\n    try {\r\n        return await api.get(\"/satisfied\")\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nexport const getSatisfied = async (id) => {\r\n    try {\r\n        return await api.get(`/satisfied/${id}`)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst updateSatisfied = async (id, data) => {\r\n    try {\r\n        await api.put(`/satisfied/${id}`, data)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst deleteSatisfied = async (id) => {\r\n    try {\r\n        await api.delete(`/satisfied/${id}`)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nconst createSatisfied = async (data) => {\r\n    try {\r\n        await api.post(`/satisfied`, data)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nexport const useSatisfieds = () => {\r\n    return useQuery([\"satisfieds\"], () => getSatisfieds())\r\n}\r\n\r\nexport const useSatisfied = () => {\r\n    const {id} = useParams()\r\n    return useQuery([\"satisfied\", id], () => getSatisfied(id), {\r\n        enabled: !!id,\r\n    })\r\n}\r\n\r\nexport const useUpdateSatisfied = ({onSuccess, onError}) => {\r\n    const {id} = useParams()\r\n    return useMutation(data => updateSatisfied(id, data), {onSuccess, onError})\r\n}\r\n\r\nexport const useDeleteSatisfied = ({onSuccess, onError}) => {\r\n    const {id} = useParams()\r\n    return useMutation(() => deleteSatisfied(id), {\r\n        onSuccess,\r\n        onError,\r\n    })\r\n}\r\n\r\nexport const useCreateSatisfied = ({onSuccess, onError}) => {\r\n    return useMutation(\r\n        data => createSatisfied(data),\r\n        {\r\n            onSuccess,\r\n            onError,\r\n        }\r\n    )\r\n}\r\n","import api from \"../api\";\r\nimport {useMutation} from \"react-query\";\r\n\r\nconst sendEmail = async (data) => {\r\n    try {\r\n        await api.post(`/email/send`, data)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nexport const useSendEmail = ({onSuccess, onError}) => {\r\n    return useMutation(\r\n        data => sendEmail(data),\r\n        {\r\n            onSuccess,\r\n            onError,\r\n        }\r\n    )\r\n}\r\n","import {useMutation} from \"react-query\";\r\nimport api from \"../api\";\r\n\r\nconst signIn = async (data) => {\r\n    try {\r\n        const res = await api.post(`/auth/login`, data?.data)\r\n        data?.dispatch({type: \"user/login\", payload: res?.data})\r\n    } catch (err) {\r\n        throw err.response\r\n    }\r\n}\r\n\r\nexport const useSignIn = ({onSuccess, onError}) => {\r\n    return useMutation(data => signIn(data), {onSuccess, onError})\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Button, Col, Form, Input, Row} from \"antd\";\r\nimport ImageUpload from \"../../../components/image-upload/image-upload\";\r\nimport {MainApi} from \"../../../api\";\r\nimport {Editor} from \"react-draft-wysiwyg\";\r\nimport {useArticle, useCreateArticle} from \"hooks\";\r\nimport {toast} from \"react-toastify\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport {ContentState, convertToRaw, EditorState} from \"draft-js\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction CreateArticle(props) {\r\n    const navigate = useNavigate()\r\n\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n    const createMutation = useCreateArticle({\r\n        onSuccess() {\r\n            toast.success(\"Successfully created\")\r\n            navigate(-1)\r\n        },\r\n        onError(err) {\r\n            toast.error(err?.data?.error)\r\n        },\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        createMutation.mutate({\r\n            body: draftToHtml(convertToRaw(editorState.getCurrentContent())).toString(),\r\n            title: values?.title,\r\n            name: values?.name,\r\n            readTime: Number(values?.readTime),\r\n            image: url\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const blocks = htmlToDraft(\"\");\r\n\r\n    const {contentBlocks, entityMap} = blocks;\r\n    const contentState = ContentState.createFromBlockArray(\r\n        contentBlocks,\r\n        entityMap\r\n    );\r\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(contentState));\r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n                layout=\"vertical\"\r\n            >\r\n                <Row gutter={[20, 20]} className=\"alce\">\r\n                    <Col span={4}>\r\n                        <ImageUpload\r\n                            onSetImage={image => setUrl(image)}\r\n                            url={`${MainApi}/${url}`}\r\n                            forEdit={true}\r\n                            isCreate={true}\r\n                            imgLoading={!url}\r\n                        />\r\n                    </Col>\r\n                    <Col span={9}>\r\n                        <Form.Item\r\n                            label=\"Title\"\r\n                            name=\"title\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your title!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={9}>\r\n                        <div>\r\n                            <Form.Item\r\n                                label=\"Read Time\"\r\n                                name=\"readTime\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your Read Time!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input type=\"number\"/>\r\n                            </Form.Item>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={9}>\r\n                        <div>\r\n                            <Form.Item\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your Name!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input/>\r\n                            </Form.Item>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Form.Item\r\n                        label=\"Body\"\r\n                        name=\"body\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your body!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Editor\r\n                            editorState={editorState}\r\n                            toolbarClassName=\"toolbarClassName\"\r\n                            wrapperClassName=\"wrapperClassName\"\r\n                            editorClassName=\"editorClassName\"\r\n                            onEditorStateChange={onEditorStateChange}\r\n                            toolbar={{\r\n                                options: [\r\n                                    \"inline\",\r\n                                    \"blockType\",\r\n                                    \"fontSize\",\r\n                                    \"fontFamily\",\r\n                                    \"list\",\r\n                                    \"textAlign\",\r\n                                    \"colorPicker\",\r\n                                    \"link\",\r\n                                    \"embedded\",\r\n                                    \"emoji\",\r\n                                    \"image\",\r\n                                    \"remove\",\r\n                                    \"history\",\r\n                                ],\r\n                                colorPicker: {\r\n                                    popupClassName: \"colorModal\",\r\n                                },\r\n                                link: {\r\n                                    popupClassName: \"colorModal\",\r\n                                },\r\n                                image: {\r\n                                    popupClassName: \"colorModal\",\r\n                                },\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                </Row>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={createMutation?.isLoading}>\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateArticle;"],"names":["MainApi","instance","axios","baseURL","interceptors","request","use","config","headers","Authorization","getCookie","error","Promise","reject","response","Wrapper","styled","ImageWrapper","props","forEdit","WrapperDefault","StyledImg","beforeUpload","file","isJpgOrPng","type","message","onSetImage","url","imgLoading","isCreate","args","useState","loading","setLoading","imageUrl","setImageUrl","uploadFile","useUploadFile","onSuccess","console","log","onError","err","uploadButton","isLoading","LoadingOutlined","PlusOutlined","style","marginTop","useEffect","data","result","name","listType","className","showUploadList","onChange","info","formData","FormData","status","img","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","append","mutate","customRequest","setTimeout","disabled","accept","src","alt","height","getArticles","api","getArticle","id","updateArticle","deleteArticle","createArticle","useArticles","useQuery","useArticle","useParams","enabled","useUpdateArticle","useMutation","useDeleteArticle","useCreateArticle","getSatisfieds","getSatisfied","updateSatisfied","deleteSatisfied","createSatisfied","useSatisfieds","useSatisfied","useUpdateSatisfied","useDeleteSatisfied","useCreateSatisfied","sendEmail","useSendEmail","signIn","res","dispatch","payload","useSignIn","navigate","useNavigate","setUrl","createMutation","toast","blocks","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","EditorState","editorState","setEditorState","initialValues","remember","onFinish","values","body","draftToHtml","convertToRaw","getCurrentContent","toString","title","readTime","Number","image","onFinishFailed","errorInfo","autoComplete","layout","gutter","span","label","rules","required","Editor","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","toolbar","options","colorPicker","popupClassName","link","htmlType"],"sourceRoot":""}