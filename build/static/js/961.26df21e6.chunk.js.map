{"version":3,"file":"static/js/961.26df21e6.chunk.js","mappings":"+MAGaA,EAAU,yBAEjBC,EAAWC,IAAAA,OAAa,CAC1BC,QAASH,IAGbC,EAASG,aAAaC,QAAQC,IAA9B,yCACI,WAAOC,GAAP,6EACIA,EAAOC,QAAQC,cAAf,kBAAyCC,EAAAA,EAAAA,OACzCH,EAAOC,SAAP,kBACOD,EAAOC,SADd,IAEI,eAAgB,qBAJxB,kBAMWD,GANX,2CADJ,uDASI,SAACI,GAAD,OAAWC,QAAQC,OAAOF,EAAMG,SAAhC,IAGJb,EAASG,aAAaU,SAASR,KAC3B,SAACQ,GAAD,OAAcA,CAAd,IACA,SAACH,GACG,OAAOC,QAAQC,OAAOF,EAAMG,SAC/B,IAGL,K,wGCzBMC,EAAM,yCAAG,WAAOC,GAAP,qGAEWC,EAAAA,EAAAA,KAAA,qBAAwBD,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMA,MAFzC,OAEDE,EAFC,OAGH,OAAJF,QAAI,IAAJA,GAAAA,EAAMG,SAAS,CAACC,KAAM,aAAcC,QAAO,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAKF,OAH3C,sDAKD,KAAIF,SALH,yDAAH,sDASCQ,EAAY,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAClC,OAAOC,EAAAA,EAAAA,cAAY,SAAAT,GAAI,OAAID,EAAOC,EAAX,GAAkB,CAACO,UAAAA,EAAWC,QAAAA,GACxD,C,iKC0ED,MAjFA,SAAcE,GAEV,IAAMP,GAAWQ,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXd,GAASO,EAAAA,EAAAA,GAAU,CACrBC,UAAW,WACPO,QAAQC,IAAI,WACZH,EAAS,YACZ,EACDJ,QAAS,SAACQ,GACNF,QAAQC,IAAI,MAAOC,EACtB,IAqBL,OAJAC,EAAAA,EAAAA,YAAU,WACNH,QAAQC,IAAIhB,EAAQ,OACvB,GAAE,CAACA,KAGA,gBAAKmB,UAAU,OAAf,UACI,UAAC,IAAD,CACIC,OAAO,WACPC,KAAK,QACLC,cAAe,CAACC,UAAU,GAC1BC,SAxBK,SAACC,GACdzB,EAAO0B,OAAO,CACVzB,KAAM,CACF0B,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAQE,MACfC,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQG,UAEtBxB,SAAUA,GAEjB,EAiBWyB,eAfW,SAACC,GACpBf,QAAQC,IAAI,UAAWc,EAC1B,EAcWC,aAAa,MACbZ,UAAU,OAPd,WASI,SAAC,SAAD,CACIa,MAAM,QACNX,KAAK,QACLY,MAAO,CACH,CAACC,UAAU,EAAMC,QAAS,4BAC1B,CACI9B,KAAM,QACN8B,QAAS,mCAPrB,UAWI,SAAC,IAAD,CAAOC,MAAM,WAGjB,SAAC,SAAD,CACIJ,MAAM,WACNX,KAAK,WACLY,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,gCAHtC,UAKI,SAAC,aAAD,OAGJ,SAAC,SAAD,WACI,SAAC,IAAD,CACI9B,KAAK,UACLgC,SAAS,SACTC,MAAO,CAACF,MAAO,QACfG,QAAO,OAAEvC,QAAF,IAAEA,OAAF,EAAEA,EAAQwC,UAJrB,yBAYnB,C","sources":["api/index.js","hooks/useAuth.js","pages/auth/auth.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {getCookie} from \"utils/cookie\";\r\n\r\nexport const MainApi = \"https://safeeds.us/api\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: MainApi,\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    async (config) => {\r\n        config.headers.Authorization = `Bearer ${getCookie()}`;\r\n        config.headers = {\r\n            ...config.headers,\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error.response)\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        return Promise.reject(error.response);\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","import {useMutation} from \"react-query\";\r\nimport api from \"../api\";\r\n\r\nconst signIn = async (data) => {\r\n    try {\r\n        const res = await api.post(`/auth/login`, data?.data)\r\n        data?.dispatch({type: \"user/login\", payload: res?.data})\r\n    } catch (err) {\r\n        throw err.response\r\n    }\r\n}\r\n\r\nexport const useSignIn = ({onSuccess, onError}) => {\r\n    return useMutation(data => signIn(data), {onSuccess, onError})\r\n}","import React, {useEffect} from 'react';\r\nimport {Button, Form, Input} from 'antd';\r\nimport \"./auth.scss\"\r\nimport {useSignIn} from \"hooks/useAuth\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction Auth(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const signIn = useSignIn({\r\n        onSuccess: () => {\r\n            console.log(\"success\")\r\n            navigate(\"/articles\")\r\n        },\r\n        onError: (err) => {\r\n            console.log(\"err\", err)\r\n        },\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        signIn.mutate({\r\n            data: {\r\n                email: values?.email,\r\n                password: values?.password,\r\n            },\r\n            dispatch: dispatch\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(signIn, \"sign\")\r\n    }, [signIn])\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <Form\r\n                layout=\"vertical\"\r\n                name=\"basic\"\r\n                initialValues={{remember: true}}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n                className=\"form\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {required: true, message: 'Please input your email!'},\r\n                        {\r\n                            type: 'email',\r\n                            message: 'The input is not valid E-mail!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input width=\"200\"/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: 'Please input your password!'}]}\r\n                >\r\n                    <Input.Password/>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{width: \"100%\"}}\r\n                        loading={signIn?.isLoading}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n"],"names":["MainApi","instance","axios","baseURL","interceptors","request","use","config","headers","Authorization","getCookie","error","Promise","reject","response","signIn","data","api","res","dispatch","type","payload","useSignIn","onSuccess","onError","useMutation","props","useDispatch","navigate","useNavigate","console","log","err","useEffect","className","layout","name","initialValues","remember","onFinish","values","mutate","email","password","onFinishFailed","errorInfo","autoComplete","label","rules","required","message","width","htmlType","style","loading","isLoading"],"sourceRoot":""}